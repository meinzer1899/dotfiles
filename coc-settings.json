{
  "languageserver": {
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    }
  },
  "diagnostic-languageserver.filetypes": {
    "vim": "vint",
    "cmake": "cmake-lint",
    // for md, ascidoc and more, https://github.com/errata-ai/vale looks promising
    "markdown": ["write-good", "markdownlint"],
    "dockerfile": "hadolint",
    "zsh": "zsh"
  },
  "diagnostic-languageserver.mergeConfig": true,
  "diagnostic-languageserver.linters": {
    // https://cmake-format.readthedocs.io/en/latest/cmake-lint.html
    // part of https://github.com/cheshirekow/cmake_format
    "cmake-lint": {
      "args": [
        "--disabled-codes",
        "C0301",
        "C0307",
        "--",
        "%filename",
      ],
    },
    "flake8": {
      "sourceName": "flake8",
      "command": "flake8",
      "debounce": 200,
      "rootPatterns": [".git", "pyproject.toml", "setup.py"],
      "args": [
        // "--ignore=E402,C901,W503,W504,E116,E702,C0103,C0114,C0115,C0116,C0103,C0301,W0613,W0102,R0903,R0902,R0914,R0915,R0205,W0703,W0702,W0603",
        "--select=F,DUO,SIM",
        "--format=%(row)d,%(col)d,%(code).1s,%(code)s: %(text)s",
        "-"
      ],
      "offsetLine": 0,
      "offsetColumn": 0,
      "formatLines": 1,
      "formatPattern": [
        "(\\d+),(\\d+),([A-Z]),(.*)(\\r|\\n)*$",
        {
          "line": 1,
          "column": 2,
          "security": 3,
          "message": 4
        }
      ],
      "securities": {
        "W": "warning",
        "E": "warning",
        "F": "warning",
        "D": "warning",
        "S": "warning",
        "C": "info",
        "N": "hint"
      }
    }
  },
  "coc.preferences.extensionUpdateCheck": "daily",
  "coc.source.file.ignoreHidden": false,
  // lint only via coc-ruff, not via coc-pyright
  "python.linting.enabled": false,
  "explorer.icon.enableNerdfont": true,
  "explorer.icon.source": "builtin",
  "explorer.file.showHiddenFiles": true,
  // "clangd.compilationDatabasePath": "build/", // compilationDatabaseCandidates is ignored if you specify a value here :(
  "clangd.compilationDatabaseCandidates": ["build/",  "build/native/debug/", "build/native/release/", "build/cross/release/", "build/release/", "build/cross/debug/"],
  "clangd.disableProgressNotifications": true,
  "clangd.showDBChangedNotification": false,
  // https://manpages.debian.org/experimental/clangd/clangd.1.en.html
  // https://github.com/llvm/llvm-project/blob/llvmorg-15.0.6/clang-tools-extra/clangd/tool/ClangdMain.cpp
  "clangd.arguments": [
    "--all-scopes-completion=true",
    "--background-index=true",
    "--background-index-priority=background",
    "--clang-tidy=false",
    "--completion-style=detailed",
    "--compile-commands-dir=build",
    "--enable-config=true",
    "--header-insertion=never",
    "--header-insertion-decorators",
    "-j=2",
    "--query-driver=/usr/local/bin/clang++",
  ],
  "clangd.path": "~/.config/coc/extensions/coc-clangd-data/install/16.0.2/clangd_16.0.2/bin/clangd",
  "inlayHint.enable": false,
  "inlayHint.display": false,
  "inlayHint.enableParameter": false,
  "semanticTokens.enable": true,
  "colors.enable": true,
  "diagnostic.format": "%message [%source]",
  "diagnostic.virtualText": true,
  "diagnostic.checkCurrentLine": true,
  "diagnostic.separateRelatedInformationAsDiagnostics": true,
  "diagnostic.virtualTextCurrentLineOnly": true,
  "diagnostic.virtualTextLimitInOneLine": 2,
  "diagnostic.messageTarget": "float",
  // Change "diagnostic.enableMessage" to "jump" and use <Plug>(coc-diagnostic-info) to show diagnostic messages.
  "diagnostic.enableMessage": "jump"
}
